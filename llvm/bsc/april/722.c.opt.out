value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %12, !dbg !42

false

6:                                                ; preds = %4
  br label %15, !dbg !38

false
instruction:   br label %15, !dbg !38

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
i32 %8
false
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %12, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
  br label %14

false

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
  br label %14

false
instruction:   store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
i32 %11
false
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
i32 %13
false
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
false
instruction:   br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
i32 0
false
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
false
instruction:   ret i32 %.1, !dbg !52
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !55, metadata !DIExpression()), !dbg !65
i32* %0
false
!55 = !DILocalVariable(name: "x", arg: 1, scope: !53, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !56, metadata !DIExpression()), !dbg !65
i32* %1
false
!56 = !DILocalVariable(name: "a", arg: 2, scope: !53, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !57, metadata !DIExpression()), !dbg !65
i32* %2
false
!57 = !DILocalVariable(name: "n", arg: 3, scope: !53, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !58, metadata !DIExpression()), !dbg !65
i32* %3
false
!58 = !DILocalVariable(name: "m", arg: 4, scope: !53, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %12, !dbg !42

false

6:                                                ; preds = %4
  br label %15, !dbg !38

false
instruction:   br label %15, !dbg !38

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !59, metadata !DIExpression()), !dbg !65
i32 %8
false
!59 = !DILocalVariable(name: "val", scope: !53, file: !3, line: 37, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %12, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
  br label %14

false

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
  br label %14

false
instruction:   store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %11, metadata !60, metadata !DIExpression()), !dbg !79
i32 %11
false
!60 = !DILocalVariable(name: "val2", scope: !61, file: !3, line: 45, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %13, metadata !63, metadata !DIExpression()), !dbg !83
i32 %13
false
!63 = !DILocalVariable(name: "val2", scope: !64, file: !3, line: 51, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
false
instruction:   br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
i32 0
false
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
false
instruction:   ret i32 %.1, !dbg !52
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: nounwind uwtable
define dso_local i32 @foo(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %6, label %7, !dbg !37

6:                                                ; preds = %4
  br label %15, !dbg !38

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %12, !dbg !42

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
  br label %14

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
  br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !53 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !55, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32* %1, metadata !56, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32* %2, metadata !57, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32* %3, metadata !58, metadata !DIExpression()), !dbg !65
  store i32 5, i32* %0, align 4, !dbg !66, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !67, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !68
  br i1 %5, label %6, label %7, !dbg !70

6:                                                ; preds = %4
  br label %15, !dbg !71

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !73, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !59, metadata !DIExpression()), !dbg !65
  %9 = icmp eq i32 %8, 5, !dbg !74
  br i1 %9, label %10, label %12, !dbg !75

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !76, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !77, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !78, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !60, metadata !DIExpression()), !dbg !79
  br label %14

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !80, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !81, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !82, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !63, metadata !DIExpression()), !dbg !83
  br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !84
  br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !65
  ret i32 %.1, !dbg !85
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 8, column: 19, scope: !39)
!39 = distinct !DILexicalBlock(scope: !36, file: !3, line: 8, column: 18)
!40 = !DILocation(line: 10, column: 15, scope: !13)
!41 = !DILocation(line: 12, column: 13, scope: !25)
!42 = !DILocation(line: 12, column: 9, scope: !13)
!43 = !DILocation(line: 15, column: 12, scope: !24)
!44 = !DILocation(line: 16, column: 12, scope: !24)
!45 = !DILocation(line: 18, column: 20, scope: !24)
!46 = !DILocation(line: 0, scope: !24)
!47 = !DILocation(line: 21, column: 12, scope: !27)
!48 = !DILocation(line: 22, column: 12, scope: !27)
!49 = !DILocation(line: 24, column: 20, scope: !27)
!50 = !DILocation(line: 0, scope: !27)
!51 = !DILocation(line: 0, scope: !25)
!52 = !DILocation(line: 29, column: 1, scope: !13)
!53 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !54)
!54 = !{!55, !56, !57, !58, !59, !60, !63}
!55 = !DILocalVariable(name: "x", arg: 1, scope: !53, file: !3, line: 31, type: !16)
!56 = !DILocalVariable(name: "a", arg: 2, scope: !53, file: !3, line: 31, type: !16)
!57 = !DILocalVariable(name: "n", arg: 3, scope: !53, file: !3, line: 31, type: !16)
!58 = !DILocalVariable(name: "m", arg: 4, scope: !53, file: !3, line: 31, type: !16)
!59 = !DILocalVariable(name: "val", scope: !53, file: !3, line: 37, type: !5)
!60 = !DILocalVariable(name: "val2", scope: !61, file: !3, line: 45, type: !5)
!61 = distinct !DILexicalBlock(scope: !62, file: !3, line: 39, column: 19)
!62 = distinct !DILexicalBlock(scope: !53, file: !3, line: 39, column: 9)
!63 = !DILocalVariable(name: "val2", scope: !64, file: !3, line: 51, type: !5)
!64 = distinct !DILexicalBlock(scope: !62, file: !3, line: 47, column: 12)
!65 = !DILocation(line: 0, scope: !53)
!66 = !DILocation(line: 32, column: 8, scope: !53)
!67 = !DILocation(line: 33, column: 8, scope: !53)
!68 = !DILocation(line: 35, column: 11, scope: !69)
!69 = distinct !DILexicalBlock(scope: !53, file: !3, line: 35, column: 9)
!70 = !DILocation(line: 35, column: 9, scope: !53)
!71 = !DILocation(line: 35, column: 19, scope: !72)
!72 = distinct !DILexicalBlock(scope: !69, file: !3, line: 35, column: 18)
!73 = !DILocation(line: 37, column: 15, scope: !53)
!74 = !DILocation(line: 39, column: 13, scope: !62)
!75 = !DILocation(line: 39, column: 9, scope: !53)
!76 = !DILocation(line: 42, column: 12, scope: !61)
!77 = !DILocation(line: 43, column: 12, scope: !61)
!78 = !DILocation(line: 45, column: 20, scope: !61)
!79 = !DILocation(line: 0, scope: !61)
!80 = !DILocation(line: 48, column: 12, scope: !64)
!81 = !DILocation(line: 49, column: 12, scope: !64)
!82 = !DILocation(line: 51, column: 20, scope: !64)
!83 = !DILocation(line: 0, scope: !64)
!84 = !DILocation(line: 0, scope: !62)
!85 = !DILocation(line: 56, column: 1, scope: !53)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %11, !dbg !42

false

6:                                                ; preds = %4
  br label %13, !dbg !38

false
instruction:   br label %13, !dbg !38

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
  ret i32 %.1, !dbg !46

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
i32 %8
false
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %11, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !26, metadata !DIExpression()), !dbg !44
  br label %12

false

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !23, metadata !DIExpression()), !dbg !43
  br label %12

false
instruction:   call void @llvm.dbg.value(metadata i32 undef, metadata !23, metadata !DIExpression()), !dbg !43
i32 undef
false
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  br label %13

false
instruction:   call void @llvm.dbg.value(metadata i32 undef, metadata !26, metadata !DIExpression()), !dbg !44
i32 undef
false
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  br label %13

false
instruction:   store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   br label %13

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
  ret i32 %.1, !dbg !46

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
i32 0
false
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
instruction:   ret i32 %.1, !dbg !46
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !49, metadata !DIExpression()), !dbg !59
i32* %0
false
!49 = !DILocalVariable(name: "x", arg: 1, scope: !47, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !50, metadata !DIExpression()), !dbg !59
i32* %1
false
!50 = !DILocalVariable(name: "a", arg: 2, scope: !47, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !51, metadata !DIExpression()), !dbg !59
i32* %2
false
!51 = !DILocalVariable(name: "n", arg: 3, scope: !47, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !52, metadata !DIExpression()), !dbg !59
i32* %3
false
!52 = !DILocalVariable(name: "m", arg: 4, scope: !47, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %12, !dbg !42

false

6:                                                ; preds = %4
  br label %15, !dbg !38

false
instruction:   br label %15, !dbg !38

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !53, metadata !DIExpression()), !dbg !59
i32 %8
false
!53 = !DILocalVariable(name: "val", scope: !47, file: !3, line: 37, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %12, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
  br label %14

false

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
  br label %14

false
instruction:   store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %11, metadata !54, metadata !DIExpression()), !dbg !73
i32 %11
false
!54 = !DILocalVariable(name: "val2", scope: !55, file: !3, line: 45, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %13, metadata !57, metadata !DIExpression()), !dbg !77
i32 %13
false
!57 = !DILocalVariable(name: "val2", scope: !58, file: !3, line: 51, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
false
instruction:   br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
i32 0
false
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
false
instruction:   ret i32 %.1, !dbg !52
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: nounwind uwtable
define dso_local i32 @foo(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %6, label %7, !dbg !37

6:                                                ; preds = %4
  br label %13, !dbg !38

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %11, !dbg !42

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !23, metadata !DIExpression()), !dbg !43
  br label %12

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !26, metadata !DIExpression()), !dbg !44
  br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  br label %13

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
  ret i32 %.1, !dbg !46
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !47 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !49, metadata !DIExpression()), !dbg !59
  call void @llvm.dbg.value(metadata i32* %1, metadata !50, metadata !DIExpression()), !dbg !59
  call void @llvm.dbg.value(metadata i32* %2, metadata !51, metadata !DIExpression()), !dbg !59
  call void @llvm.dbg.value(metadata i32* %3, metadata !52, metadata !DIExpression()), !dbg !59
  store i32 5, i32* %0, align 4, !dbg !60, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !61, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !62
  br i1 %5, label %6, label %7, !dbg !64

6:                                                ; preds = %4
  br label %15, !dbg !65

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !67, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !53, metadata !DIExpression()), !dbg !59
  %9 = icmp eq i32 %8, 5, !dbg !68
  br i1 %9, label %10, label %12, !dbg !69

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !70, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !71, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !72, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !54, metadata !DIExpression()), !dbg !73
  br label %14

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !74, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !75, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !76, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !57, metadata !DIExpression()), !dbg !77
  br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !78
  br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !59
  ret i32 %.1, !dbg !79
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 8, column: 19, scope: !39)
!39 = distinct !DILexicalBlock(scope: !36, file: !3, line: 8, column: 18)
!40 = !DILocation(line: 10, column: 15, scope: !13)
!41 = !DILocation(line: 12, column: 13, scope: !25)
!42 = !DILocation(line: 12, column: 9, scope: !13)
!43 = !DILocation(line: 0, scope: !24)
!44 = !DILocation(line: 0, scope: !27)
!45 = !DILocation(line: 0, scope: !25)
!46 = !DILocation(line: 29, column: 1, scope: !13)
!47 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !48)
!48 = !{!49, !50, !51, !52, !53, !54, !57}
!49 = !DILocalVariable(name: "x", arg: 1, scope: !47, file: !3, line: 31, type: !16)
!50 = !DILocalVariable(name: "a", arg: 2, scope: !47, file: !3, line: 31, type: !16)
!51 = !DILocalVariable(name: "n", arg: 3, scope: !47, file: !3, line: 31, type: !16)
!52 = !DILocalVariable(name: "m", arg: 4, scope: !47, file: !3, line: 31, type: !16)
!53 = !DILocalVariable(name: "val", scope: !47, file: !3, line: 37, type: !5)
!54 = !DILocalVariable(name: "val2", scope: !55, file: !3, line: 45, type: !5)
!55 = distinct !DILexicalBlock(scope: !56, file: !3, line: 39, column: 19)
!56 = distinct !DILexicalBlock(scope: !47, file: !3, line: 39, column: 9)
!57 = !DILocalVariable(name: "val2", scope: !58, file: !3, line: 51, type: !5)
!58 = distinct !DILexicalBlock(scope: !56, file: !3, line: 47, column: 12)
!59 = !DILocation(line: 0, scope: !47)
!60 = !DILocation(line: 32, column: 8, scope: !47)
!61 = !DILocation(line: 33, column: 8, scope: !47)
!62 = !DILocation(line: 35, column: 11, scope: !63)
!63 = distinct !DILexicalBlock(scope: !47, file: !3, line: 35, column: 9)
!64 = !DILocation(line: 35, column: 9, scope: !47)
!65 = !DILocation(line: 35, column: 19, scope: !66)
!66 = distinct !DILexicalBlock(scope: !63, file: !3, line: 35, column: 18)
!67 = !DILocation(line: 37, column: 15, scope: !47)
!68 = !DILocation(line: 39, column: 13, scope: !56)
!69 = !DILocation(line: 39, column: 9, scope: !47)
!70 = !DILocation(line: 42, column: 12, scope: !55)
!71 = !DILocation(line: 43, column: 12, scope: !55)
!72 = !DILocation(line: 45, column: 20, scope: !55)
!73 = !DILocation(line: 0, scope: !55)
!74 = !DILocation(line: 48, column: 12, scope: !58)
!75 = !DILocation(line: 49, column: 12, scope: !58)
!76 = !DILocation(line: 51, column: 20, scope: !58)
!77 = !DILocation(line: 0, scope: !58)
!78 = !DILocation(line: 0, scope: !56)
!79 = !DILocation(line: 56, column: 1, scope: !47)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %12, !dbg !42

false

6:                                                ; preds = %4
  br label %15, !dbg !38

false
instruction:   br label %15, !dbg !38

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !46, metadata !DIExpression()), !dbg !52
i32 %8
false
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %12, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !26, metadata !DIExpression()), !dbg !50
  br label %14

false

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !23, metadata !DIExpression()), !dbg !46
  br label %14

false
instruction:   store i32 50, i32* %2, align 4, !dbg !43, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !44, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %11, metadata !47, metadata !DIExpression()), !dbg !66
i32 %11
false
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   store i32 50, i32* %2, align 4, !dbg !47, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !48, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
i32* %2
false
instruction:   call void @llvm.dbg.value(metadata i32 %13, metadata !50, metadata !DIExpression()), !dbg !70
i32 %13
false
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  br label %15

false
instruction:   %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
  %11 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
  %13 = load i32, i32* %2, align 4, !dbg !49, !tbaa !30
false
instruction:   br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
  ret i32 %.1, !dbg !52

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
i32 0
false
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !51
false
instruction:   ret i32 %.1, !dbg !52
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: nounwind uwtable
define dso_local i32 @foo(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %6, label %7, !dbg !57

6:                                                ; preds = %4
  br label %15, !dbg !58

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !60, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !46, metadata !DIExpression()), !dbg !52
  %9 = icmp eq i32 %8, 5, !dbg !61
  br i1 %9, label %10, label %12, !dbg !62

10:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !63, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !64, !tbaa !30
  %11 = load i32, i32* %2, align 4, !dbg !65, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %11, metadata !47, metadata !DIExpression()), !dbg !66
  br label %14

12:                                               ; preds = %7
  store i32 50, i32* %2, align 4, !dbg !67, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !68, !tbaa !30
  %13 = load i32, i32* %2, align 4, !dbg !69, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %13, metadata !50, metadata !DIExpression()), !dbg !70
  br label %14

14:                                               ; preds = %12, %10
  %.0 = phi i32 [ %11, %10 ], [ %13, %12 ], !dbg !71
  br label %15

15:                                               ; preds = %14, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %14 ], !dbg !52
  ret i32 %.1, !dbg !72
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 35, column: 19, scope: !59)
!59 = distinct !DILexicalBlock(scope: !56, file: !3, line: 35, column: 18)
!60 = !DILocation(line: 37, column: 15, scope: !40)
!61 = !DILocation(line: 39, column: 13, scope: !49)
!62 = !DILocation(line: 39, column: 9, scope: !40)
!63 = !DILocation(line: 42, column: 12, scope: !48)
!64 = !DILocation(line: 43, column: 12, scope: !48)
!65 = !DILocation(line: 45, column: 20, scope: !48)
!66 = !DILocation(line: 0, scope: !48)
!67 = !DILocation(line: 48, column: 12, scope: !51)
!68 = !DILocation(line: 49, column: 12, scope: !51)
!69 = !DILocation(line: 51, column: 20, scope: !51)
!70 = !DILocation(line: 0, scope: !51)
!71 = !DILocation(line: 0, scope: !49)
!72 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %6, label %7, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !28
  %9 = icmp eq i32 %8, 5, !dbg !41
  br i1 %9, label %10, label %11, !dbg !42

false

6:                                                ; preds = %4
  br label %13, !dbg !38

false
instruction:   br label %13, !dbg !38

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
  ret i32 %.1, !dbg !46

false
instruction:   %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
i32* %0
false
instruction:   call void @llvm.dbg.value(metadata i32 %8, metadata !46, metadata !DIExpression()), !dbg !52
i32 %8
false
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   %9 = icmp eq i32 %8, 5, !dbg !41
  %8 = load i32, i32* %0, align 4, !dbg !40, !tbaa !30
false
i32 5
false
instruction:   br i1 %9, label %10, label %11, !dbg !42
  %9 = icmp eq i32 %8, 5, !dbg !41
false

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !26, metadata !DIExpression()), !dbg !44
  br label %12

false

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !23, metadata !DIExpression()), !dbg !43
  br label %12

false
instruction:   call void @llvm.dbg.value(metadata i32 undef, metadata !47, metadata !DIExpression()), !dbg !63
i32 undef
false
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  br label %13

false
instruction:   call void @llvm.dbg.value(metadata i32 undef, metadata !50, metadata !DIExpression()), !dbg !64
i32 undef
false
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
  br label %13

false
instruction:   store i32 50, i32* %2, align 4, !dbg !45, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !45, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
i32* %2
false
instruction:   br label %13

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
  ret i32 %.1, !dbg !46

false
instruction:   %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
i32 0
false
  %.0 = load i32, i32* %2, align 4, !dbg !45, !tbaa !30
false
instruction:   ret i32 %.1, !dbg !46
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: nounwind uwtable
define dso_local i32 @foo(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %6, label %7, !dbg !57

6:                                                ; preds = %4
  br label %13, !dbg !58

7:                                                ; preds = %4
  %8 = load i32, i32* %0, align 4, !dbg !60, !tbaa !30
  call void @llvm.dbg.value(metadata i32 %8, metadata !46, metadata !DIExpression()), !dbg !52
  %9 = icmp eq i32 %8, 5, !dbg !61
  br i1 %9, label %10, label %11, !dbg !62

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !47, metadata !DIExpression()), !dbg !63
  br label %12

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !50, metadata !DIExpression()), !dbg !64
  br label %12

12:                                               ; preds = %11, %10
  store i32 50, i32* %2, align 4, !dbg !65, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !65, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !65, !tbaa !30
  br label %13

13:                                               ; preds = %12, %6
  %.1 = phi i32 [ 0, %6 ], [ %.0, %12 ], !dbg !52
  ret i32 %.1, !dbg !66
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 35, column: 19, scope: !59)
!59 = distinct !DILexicalBlock(scope: !56, file: !3, line: 35, column: 18)
!60 = !DILocation(line: 37, column: 15, scope: !40)
!61 = !DILocation(line: 39, column: 13, scope: !49)
!62 = !DILocation(line: 39, column: 9, scope: !40)
!63 = !DILocation(line: 0, scope: !48)
!64 = !DILocation(line: 0, scope: !51)
!65 = !DILocation(line: 0, scope: !49)
!66 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %2
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
true
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
true
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %2
i32* %1
value we are looking for: i32* %2
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
true
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
true
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %2
i32* %0
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %1
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %0
value we are looking for: i32* %1
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
true
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %1
i32* %0
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #2

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: nounwind uwtable
define dso_local i32 @foo2(i32* noundef %0, i32* noundef %1, i32* noundef %2, i32* noundef %3) local_unnamed_addr #1 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %2
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
true
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
true
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %2
i32* %1
value we are looking for: i32* %2
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
true
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
true
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %2
i32* %0
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %1
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %0
value we are looking for: i32* %1
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
true
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %1
i32* %0
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2
value we are looking for: i32* %3
printing module's instructions etc...
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
i32* %0
false
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
i32* %1
false
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
i32* %2
false
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
i32* %3
false
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
false
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
instruction:   call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
i32* %0
false
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
i32* %1
false
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
i32* %2
false
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
i32* %3
false
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
false
!DIExpression()
false
; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1

false
instruction:   store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
i32 5
false
i32* %0
false
instruction:   store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
i32 10
false
i32* %1
false
instruction:   %5 = icmp eq i32* %0, @g, !dbg !35
i32* %0
false
@g = dso_local global i32 0, align 4, !dbg !0
false
instruction:   br i1 %5, label %7, label %6, !dbg !37
  %5 = icmp eq i32* %0, @g, !dbg !35
false

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

false

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
i32 50
false
i32* %2
false
instruction:   store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
i32 100
false
i32* %3
true
instruction:   %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
i32* %2
false
instruction:   br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39

false
instruction:   %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
false
i32 0
false
instruction:   ret i32 %.1, !dbg !39
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
false
DONE printing module's instructions etc...
; ModuleID = 'april/722.c.ll'
source_filename = "april/722.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local global i32 0, align 4, !dbg !0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !13 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !18, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %1, metadata !19, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %2, metadata !20, metadata !DIExpression()), !dbg !28
  call void @llvm.dbg.value(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !28
  store i32 5, i32* %0, align 4, !dbg !29, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !34, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !35
  br i1 %5, label %7, label %6, !dbg !37

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !38, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !38, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !38, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !28
  ret i32 %.1, !dbg !39
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local i32 @foo2(i32* noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #0 !dbg !40 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !42, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %1, metadata !43, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %2, metadata !44, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %3, metadata !45, metadata !DIExpression()), !dbg !52
  store i32 5, i32* %0, align 4, !dbg !53, !tbaa !30
  store i32 10, i32* %1, align 4, !dbg !54, !tbaa !30
  %5 = icmp eq i32* %0, @g, !dbg !55
  br i1 %5, label %7, label %6, !dbg !57

6:                                                ; preds = %4
  store i32 50, i32* %2, align 4, !dbg !58, !tbaa !30
  store i32 100, i32* %3, align 4, !dbg !58, !tbaa !30
  %.0 = load i32, i32* %2, align 4, !dbg !58, !tbaa !30
  br label %7

7:                                                ; preds = %4, %6
  %.1 = phi i32 [ %.0, %6 ], [ 0, %4 ], !dbg !52
  ret i32 %.1, !dbg !59
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g", scope: !2, file: !3, line: 2, type: !5, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "april/722.c", directory: "/home/nius/eth/bachelorsthesis/llvm-project/llvm/bsc", checksumkind: CSK_MD5, checksum: "f3dc65871edcec838c5bfa212f2d392f")
!4 = !{!0}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 7, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 7, !"PIC Level", i32 2}
!10 = !{i32 7, !"PIE Level", i32 2}
!11 = !{i32 7, !"uwtable", i32 1}
!12 = !{!"Ubuntu clang version 14.0.0-++20220316013304+add3ab7f4c8a-1~exp1~20220316133356.105"}
!13 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 4, type: !14, scopeLine: 4, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !16, !16, !16, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!17 = !{!18, !19, !20, !21, !22, !23, !26}
!18 = !DILocalVariable(name: "x", arg: 1, scope: !13, file: !3, line: 4, type: !16)
!19 = !DILocalVariable(name: "a", arg: 2, scope: !13, file: !3, line: 4, type: !16)
!20 = !DILocalVariable(name: "n", arg: 3, scope: !13, file: !3, line: 4, type: !16)
!21 = !DILocalVariable(name: "m", arg: 4, scope: !13, file: !3, line: 4, type: !16)
!22 = !DILocalVariable(name: "val", scope: !13, file: !3, line: 10, type: !5)
!23 = !DILocalVariable(name: "val2", scope: !24, file: !3, line: 18, type: !5)
!24 = distinct !DILexicalBlock(scope: !25, file: !3, line: 12, column: 19)
!25 = distinct !DILexicalBlock(scope: !13, file: !3, line: 12, column: 9)
!26 = !DILocalVariable(name: "val2", scope: !27, file: !3, line: 24, type: !5)
!27 = distinct !DILexicalBlock(scope: !25, file: !3, line: 20, column: 12)
!28 = !DILocation(line: 0, scope: !13)
!29 = !DILocation(line: 5, column: 8, scope: !13)
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C/C++ TBAA"}
!34 = !DILocation(line: 6, column: 8, scope: !13)
!35 = !DILocation(line: 8, column: 11, scope: !36)
!36 = distinct !DILexicalBlock(scope: !13, file: !3, line: 8, column: 9)
!37 = !DILocation(line: 8, column: 9, scope: !13)
!38 = !DILocation(line: 0, scope: !25)
!39 = !DILocation(line: 29, column: 1, scope: !13)
!40 = distinct !DISubprogram(name: "foo2", scope: !3, file: !3, line: 31, type: !14, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !50}
!42 = !DILocalVariable(name: "x", arg: 1, scope: !40, file: !3, line: 31, type: !16)
!43 = !DILocalVariable(name: "a", arg: 2, scope: !40, file: !3, line: 31, type: !16)
!44 = !DILocalVariable(name: "n", arg: 3, scope: !40, file: !3, line: 31, type: !16)
!45 = !DILocalVariable(name: "m", arg: 4, scope: !40, file: !3, line: 31, type: !16)
!46 = !DILocalVariable(name: "val", scope: !40, file: !3, line: 37, type: !5)
!47 = !DILocalVariable(name: "val2", scope: !48, file: !3, line: 45, type: !5)
!48 = distinct !DILexicalBlock(scope: !49, file: !3, line: 39, column: 19)
!49 = distinct !DILexicalBlock(scope: !40, file: !3, line: 39, column: 9)
!50 = !DILocalVariable(name: "val2", scope: !51, file: !3, line: 51, type: !5)
!51 = distinct !DILexicalBlock(scope: !49, file: !3, line: 47, column: 12)
!52 = !DILocation(line: 0, scope: !40)
!53 = !DILocation(line: 32, column: 8, scope: !40)
!54 = !DILocation(line: 33, column: 8, scope: !40)
!55 = !DILocation(line: 35, column: 11, scope: !56)
!56 = distinct !DILexicalBlock(scope: !40, file: !3, line: 35, column: 9)
!57 = !DILocation(line: 35, column: 9, scope: !40)
!58 = !DILocation(line: 0, scope: !49)
!59 = !DILocation(line: 56, column: 1, scope: !40)
BasicAliasAnalysis::alias
i32* %3
i32* %2===-------------------------------------------------------------------------===
                          ... Statistics Collected ...
===-------------------------------------------------------------------------===

 36 aa             - Number of MayAlias results
140 assume-queries - Number of Queries into an assume assume bundles
  8 dse            - Number of stores remaining after DSE
  6 function-attrs - Number of arguments marked nocapture
  2 function-attrs - Number of functions marked as nofree
  2 function-attrs - Number of functions marked as norecurse
  2 function-attrs - Number of functions marked as nosync
  2 function-attrs - Number of functions marked as willreturn
  6 function-attrs - Number of arguments marked writeonly
  3 globalopt      - Number of globals deleted
  2 globalopt      - Number of globals marked unnamed_addr
  6 instcombine    - Number of insts combined
  4 instcombine    - Number of dead inst eliminated
 18 instcombine    - Number of instruction combining iterations performed
  4 ir             - Number of renumberings across all blocks
  4 mem2reg        - Number of PHI nodes inserted
 14 mem2reg        - Number of alloca's promoted with a single store
  2 simplifycfg    - Number of common instruction 'blocks' hoisted up to the begin block
  2 simplifycfg    - Number of common instructions hoisted up to the begin block
  8 simplifycfg    - Number of blocks simplified
  1 sroa           - Maximum number of partitions per alloca
  5 sroa           - Maximum number of uses of a partition
 64 sroa           - Number of alloca partition uses rewritten
 18 sroa           - Number of alloca partitions formed
 18 sroa           - Number of allocas analyzed for replacement
 76 sroa           - Number of instructions deleted
 18 sroa           - Number of allocas promoted to SSA values


map:
94045470477136 <-> 94045470477176: 1
94045470477136 <-> 94045470477216: 1
94045470477136 <-> 94045470477256: 1
94045470477176 <-> 94045470477216: 1
94045470477176 <-> 94045470477256: 1
94045470477216 <-> 94045470477256: 13
94045470530768 <-> 94045470530808: 1
94045470530768 <-> 94045470530848: 1
94045470530768 <-> 94045470530888: 1
94045470530808 <-> 94045470530848: 1
94045470530808 <-> 94045470530888: 1
94045470530848 <-> 94045470530888: 13
